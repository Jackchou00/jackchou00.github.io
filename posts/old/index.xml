<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>古迹 🌃 on 🏡JacksBlog</title>
    <link>https://jackchou00.icu/posts/old/</link>
    <description>Recent content in 古迹 🌃 on 🏡JacksBlog</description>
    <generator>Hugo -- 0.140.2</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 29 Jan 2024 00:40:19 +0800</lastBuildDate>
    <atom:link href="https://jackchou00.icu/posts/old/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Postcards introduction Col.01</title>
      <link>https://jackchou00.icu/posts/old/postcards01/</link>
      <pubDate>Mon, 29 Jan 2024 00:40:19 +0800</pubDate>
      <guid>https://jackchou00.icu/posts/old/postcards01/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://jackchou00.github.io/Imgs/Postcards/1.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is the western part of Hangzhou, one of the youngest areas of the city, with a population of over 2 million last year. This photo was taken on a hill at an altitude of about 200 metres, just on the edge of the area, excellent to discover the breathtaking speed of Hangzhou&amp;rsquo;s development.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://jackchou00.github.io/Imgs/Postcards/2.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;This photo shows two pigeons fighting for food, but it happens to look like they were &amp;lsquo;kissing&amp;rsquo; at the moment I pressed the shutter button. It was taken at a Buddhist temple in Hangzhou called &amp;lsquo;Fa Xi&amp;rsquo;, which is famous for its effectiveness in finding marital destiny.&lt;/p&gt;</description>
    </item>
    <item>
      <title>一加9R刷机记录</title>
      <link>https://jackchou00.icu/posts/old/%E4%B8%80%E5%8A%A09r%E5%88%B7%E6%9C%BA%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Thu, 27 Jul 2023 02:51:55 +0800</pubDate>
      <guid>https://jackchou00.icu/posts/old/%E4%B8%80%E5%8A%A09r%E5%88%B7%E6%9C%BA%E8%AE%B0%E5%BD%95/</guid>
      <description>&lt;h2 id=&#34;一加9r刷机记录&#34;&gt;一加9R刷机记录&lt;/h2&gt;
&lt;h3 id=&#34;oxygenos-氧os&#34;&gt;OxygenOS 氧OS&lt;/h3&gt;
&lt;p&gt;9008救砖包可以刷入OxygenOS 11，之后升级到12和13.&lt;/p&gt;
&lt;p&gt;在OxygenOS12，系统设置中不再提供本地升级的入口，需要安装下面的apk。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://oxygenos.oneplus.net/OPLocalUpdate_For_Android12.apk&#34;&gt;https://oxygenos.oneplus.net/OPLocalUpdate_For_Android12.apk&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用体验：氧OS11和ColorOS不太一样，很简洁，傻快的动画。12和13和ColorOS很像了，内置的APP比较多一点，谷歌全家桶基本都装上了。因为是印度那边的系统，本地化还是不太好，约等于没有。续航还行，马马虎虎。&lt;/p&gt;
&lt;h3 id=&#34;coloros131&#34;&gt;ColorOS13.1&lt;/h3&gt;
&lt;p&gt;从别的系统回到ColorOS也是用9008，会丢失数据，和原系统无关。&lt;/p&gt;
&lt;p&gt;区别是ColorOS用的MsmTools需要售后的验证码和密码，所以目前应该只能找售后刷，微信上和客服说下就行，不用去线下。&lt;/p&gt;
&lt;p&gt;客服那边说完以后会有邮件发过来，下载线刷包和工具，剩下的交给远程的技术就行。&lt;/p&gt;
&lt;p&gt;第一次刷的时候验证出错，换了个电脑解决的，原因不明，期间可能会安装点高通的驱动什么的。&lt;/p&gt;
&lt;p&gt;使用体验：真·出厂系统，13和13.1相对流畅，手动设置一下毒瘤APP的电池策略以后续航很好。缺点是预装比较多，系统比较臃肿，安装APP之前要漫长的安全检查，谷歌相机会报毒，不卸载不让用支付软件。新搞出来的小布建议蛮好用的，航班、高铁车次会像Apple那样常驻显示。&lt;/p&gt;
&lt;h3 id=&#34;nameless-无名&#34;&gt;Nameless 无名&lt;/h3&gt;
&lt;p&gt;有很完善的Wiki和安装指导，电报群很热闹，更新很快，应该是需要从氧13某个版本解bl锁以后刷入。&lt;/p&gt;
&lt;p&gt;国内的第三方ROM，基于AOSP，刚开机的时候会说欢迎使用你的Pixel。&lt;/p&gt;
&lt;p&gt;非常简洁漂亮的系统，意外的是对Airpods支持很好，能看电量和各种信息，还有专门的图标和设置界面。&lt;/p&gt;
&lt;p&gt;缺点是类原生系统调度和后台控制比较放飞自我，容易发热，耗电速度惊人。刷了Magisk之后，用Scene5配合冻它会好很多，但是root了以后日用太不方便了。遂放弃。&lt;/p&gt;
&lt;p&gt;安卓14的正式版据说是2024年1月启动。&lt;/p&gt;
&lt;h3 id=&#34;coloros14-beta&#34;&gt;ColorOS14 Beta&lt;/h3&gt;
&lt;p&gt;2024.11.16 Oneplus9R开始ColorOS Log内测，应该是最后一个大版本更新。&lt;/p&gt;
&lt;p&gt;LE2100_14.0.0.50(CN01): 很卡，尤其是微信和网易云，有自定义刷新率，但是AVES和高德都不能100%触发120Hz。振动通知有问题。&lt;/p&gt;
&lt;p&gt;LE2100_14.0.0.51(CN01): 11.19更新，增量47.81MB，修复了振动通知。&lt;/p&gt;
&lt;p&gt;内测版又卡又不更新，反馈Bug权当放屁，润回13.1了，回滚需要全清，有官方降级工具，但很难用。&lt;/p&gt;
&lt;h3 id=&#34;coloros14&#34;&gt;ColorOS14&lt;/h3&gt;
&lt;p&gt;LE2100_14.0.0.300(CN01)：1.5日的第一个正式版，总体上和内测差不多，卡顿问题好了不少，还是显著的不如13.1。尤其是淘宝、微信，流体云通知很不好用，小布建议里的高铁车次会先显示第二程的问题也仍有。&lt;/p&gt;
&lt;p&gt;LE2100_14.0.0.301(CN01)：2.5更新的，增量1.5GB，没看出来修复了啥，稍微流畅一些。多了一个新春水印，只有本机拍的照片能用，很简单的功能，机型会显示成LE2100而不是一加9R。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Processing Raw Images in MATLAB</title>
      <link>https://jackchou00.icu/posts/old/processingrawinmatlab/</link>
      <pubDate>Wed, 12 Jul 2023 14:47:06 +0800</pubDate>
      <guid>https://jackchou00.icu/posts/old/processingrawinmatlab/</guid>
      <description>&lt;h2 id=&#34;process-raw-images-in-matlab&#34;&gt;Process RAW Images in MATLAB&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;这是一篇由Rob Sumner写于2014年的文章，详细讲述了什么是RAW和在MATLAB中处理RAW文件。以下是对其的补充和若干翻译。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;raw-data及其意义&#34;&gt;RAW Data及其意义&lt;/h3&gt;
&lt;p&gt;对于图像处理和计算机视觉来说，研究者往往对于图像本身的含义不感兴趣，他们将图像（往往是8bit的灰度或三通道彩色）视作多变量的函数、随机数构成的矩阵或是一些连接的像素，在此基础上设计算法。&lt;/p&gt;
&lt;p&gt;RAW Data真正将场景中光照与图像连接起来，这对于HDR、天文摄影等与传感器行为有关的模型和方法是重要的。在这类问题下，知悉图像被捕获后的整个处理链是必要的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The best image to deal with is the sensor data straight from the camera, the &lt;em&gt;raw&lt;/em&gt; data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;现在（2023），很多设备都具备输出RAW文件的能力，比如中端和高端的单反相机与微单相机，甚至一些手机也可以输出RAW。但他们都将遵循以下几个原则。&lt;/p&gt;
&lt;p&gt;RAW特指未经压缩的，包含了传感器像素值和一系列元数据（EXIF）的文件，可以有多种不同的专有的格式（尼康的NEF，佳能的CR2等），也可以是开放的格式，例如DNG（Digital Negative，数字负片）。RAW文件被故意设计成不可解读的数据格式（原文应该指厂商的专有格式），但一些逆向工程已经成功，比如CR2格式。具体请见&lt;a href=&#34;http://lclevy.free.fr/cr2/&#34;&gt;CR2逆向工程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注：剩余文章中，RAW指代文件，例如CR2，raw指代未经处理的传感器原始数据&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;raw-sensor-data的本质&#34;&gt;Raw Sensor Data的本质&lt;/h3&gt;
&lt;p&gt;从根本上来说，raw data不是能够被人眼所理解的，它既不包含一个确定的值来定义黑色，也没有确定的白色。raw是一个单通道的强度图像，像素值存储在10-16位数据中（根据不同型号的相机而定），对同一型号的传感器而言，不会有像素值高于某一个特定的值，表示了CCD或CMOS物理上的饱和点。实际输出的像素值可能大于我们期望的相机应有的范围（介于0到未曝光的像素值、或大于有意义的曝光像素值）。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注：最后一句稍微有些拗口，原文为：The output may also be larger than the expected pixel dimensions of the camera, including a border of unexposed pixels to the left and above the meaningfully exposed ones. 可能意指超出传感器预期的暗电流或饱和值（由于噪声或坏点）&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&#34;color-filter-array-颜色滤镜&#34;&gt;Color Filter Array 颜色滤镜&lt;/h4&gt;
&lt;p&gt;光子传感器（也就是CMOS或CCD）实际上只能给出一个标量，不能给出实际颜色，通过在传感器表面安装一个与像素位置相对应的滤色片，可得知单个像素感知到的单个颜色的值，通过与邻近的其他颜色的像素比对，可以估计出这一点的颜色。这个估计的过程被称作解马赛克（Demosaicing），产生m乘n乘3的RGB值阵列，即我们需要的彩色数码图像。&lt;/p&gt;</description>
    </item>
    <item>
      <title>解决换行符导致的hugo主题渲染问题</title>
      <link>https://jackchou00.icu/posts/old/%E8%A7%A3%E5%86%B3%E6%8D%A2%E8%A1%8C%E7%AC%A6%E5%AF%BC%E8%87%B4%E7%9A%84hugo%E9%97%AE%E9%A2%98/</link>
      <pubDate>Thu, 29 Jun 2023 15:43:59 +0800</pubDate>
      <guid>https://jackchou00.icu/posts/old/%E8%A7%A3%E5%86%B3%E6%8D%A2%E8%A1%8C%E7%AC%A6%E5%AF%BC%E8%87%B4%E7%9A%84hugo%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;h2 id=&#34;问题描述&#34;&gt;问题描述&lt;/h2&gt;
&lt;p&gt;由Hugo生成的静态网页在本地运行时正常，将Public目录push到Github后，Github Pages无法正确显示CSS样式。&lt;/p&gt;
&lt;h2 id=&#34;解决&#34;&gt;解决&lt;/h2&gt;
&lt;p&gt;这一问题是由于Windows和MacOS或linux系统的换行符不同导致的，而Git会自动将换行符转换为CRLF，因此在Windows上生成的静态网页在Github上无法正确显示。  &lt;br&gt;
解决办法是将git的换行符转换功能关闭，即:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git config --global core.autocrlf false
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;再次push到Github上，即可正常显示。&lt;/p&gt;</description>
    </item>
    <item>
      <title>HelloWorld</title>
      <link>https://jackchou00.icu/posts/old/helloworld/</link>
      <pubDate>Thu, 29 Jun 2023 15:07:10 +0800</pubDate>
      <guid>https://jackchou00.icu/posts/old/helloworld/</guid>
      <description>&lt;p&gt;Hello World!&lt;/p&gt;
&lt;p&gt;这里是Jackchou00的个人博客，由Hugo搭建并部署在Github上。&lt;/p&gt;
&lt;p&gt;我正在尝试在文章中添加图片，请期待！目前的尝试是使用Webp格式的图片，将图片放置于Hugo的Static文件夹中以备调用。之后将会转向Avif或JPEG-XL，因为他们具有更高的效率。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
